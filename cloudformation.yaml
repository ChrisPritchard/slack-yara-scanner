AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Slack Yara Scanner - lambda and iam role
Parameters:
  LambdaUniqueName:
    Type: String
    Default: slack-yara-scanner
    Description: "name to use in resources, no spaces/slashes."
Resources:
  SlackYaraScanner:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: main
      Runtime: go1.x
      Description: ''
      InlineCode: |
        package main
        import (
          "context"
          "github.com/aws/aws-lambda-go/lambda"
        )
        func main() {
          lambda.Start(func(ctx context.Context, name MyEvent) (string, error) {
            return "replace with compiled project", nil
          })
        }
      MemorySize: 512
      Timeout: 15
      FunctionName: !Ref LambdaUniqueName
      Role: !GetAtt SlackYaraScannerRole.Arn
      Environment:
        Variables:
          SLACK_API_TOKEN: slack-yara-scanner-api-key
          SLACK_SIGNING_SECRET: slack-yara-scanner-signing-secret
  SlackYaraScannerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: slackyarascanner role for secrets access
      Policies:
        - PolicyName: yarapolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Join ["", ["arn:aws:logs:*:", !Ref AWS::AccountId, ":*"]]
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join ["", ["arn:aws:logs:", !Ref AWS::Region, ":", !Ref AWS::AccountId, ":log-group:/aws/lambda/", !Ref LambdaUniqueName, ":*"]]
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource: !Join ["", ["arn:aws:ssm:*:", !Ref AWS::AccountId, ":parameter/slack-yara-scanner/*"]]
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Resource: !Join ["", ["arn:aws:kms:*:", !Ref AWS::AccountId, ":key/*"]]
                Condition:
                  'ForAnyValue:StringEquals':
                    'kms:ResourceAliases':
                      - 'aws/ssm'
      RoleName: SlackYaraScannerRole